vtype	|	int
id	|	bb8
assign	|	=
num	|	-87
semi	|	;
vtype	|	char
id	|	ceepo
assign	|	=
literal	|	"bonjour"
semi	|	;
while	|	while
while	|	while
semi	|	;
if	|	if
lparen	|	(
id	|	bb8
comp	|	<=
id	|	ceepo
comma	|	,
id	|	bb8
comp	|	<
id	|	ceepo
rparen	|	)
lbrace	|	{
while	|	while
lparen	|	(
id	|	bb8
comp	|	==
num	|	18
rparen	|	)
id	|	bb8
assign	|	=
id	|	bb8
multdiv	|	/
num	|	1
multdiv	|	*
num	|	4
semi	|	;
lbrace	|	}
vtype	|	int
id	|	func
lparen	|	(
vtype	|	int
id	|	a
comma	|	,
vtype	|	char
id	|	c
comma	|	,
vtype	|	int
id	|	k
comma	|	,
vtype	|	char
id	|	v
rparen	|	)
lbrace	|	{
return	|	return
num	|	0
semi	|	;
lbrace	|	}
